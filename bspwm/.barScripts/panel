#! /bin/sh

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

flavor=${1:-bar}

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT

BLUE="%{F#FF8AB3B5}"
RED="%{F#FFCB6077}"
YELLOW="%{F#FFF4BC87}"
ORANGE="%{F#FFD28B71}"
MAGENTA="%{F#FFA89BB9}"
TEAL="%{F#FF7BBdA4}"
LIGHTGREY="%{F#FFb8AfAD}"
DARKGREY="%{F#FF7E705A}"
GREEN="%{F#FF90A950}"
PURPLE="%{F#FF9547C9}"
BG="%{F#FF3B3228}"

bspc control --subscribe > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &
echo 'E' $GREEN' '$DARKGREY'Fenriz' $TEAL'⮁' > "$PANEL_FIFO" &

panel_emailStatus()
{
	icon=""
	# if totalemail doesn't exist in the /tmp dir.
	if [ ! -f /tmp/totalemail ];
	then
		echo $LIGHTGREY$icon  $LIGHTGREY 0
		# it exists
	else
		totalEmail=$(cat /tmp/totalemail)
		if [ $totalEmail -gt 0 ]; then
			icon=""
			echo $PURPLE$icon  $LIGHTGREY$totalEmail
		else
			icon=""
			echo $LIGHTGREY$icon  $DARKGREY$totalEmail
		fi
	fi
}

panel_updateStatus()
{
	updateIcon=" "
	if [ ! -f /tmp/numOfUpdates ];
	then
		echo $YELLOW$updateIcon 0
	else
		numberOfUpdates=$(cat /tmp/numOfUpdates)
		if [ $numberOfUpdates -eq 1 ];
		then
			echo $RED$updateIcon $numberOfUpdates
		elif [ $numberOfUpdates -gt 1 ];
		then
			echo $RED$updateIcon $numberOfUpdates
		else
			echo $YELLOW$updateIcon $numberOfUpdates
		fi
	fi
}

panel_volicon()
{
        volStatus=$(amixer get Master | tail -n 1 | cut -d '[' -f 4 | sed 's/].*//g')
        headphone=$(amixer -c 0 contents | grep 17 -A 2 | awk 'NR==3 { print $2 }' | cut -d '=' -f 2)

        if [ "$volStatus" == "on" ] && [ "$headphone" == "off" ];
                then echo $MAGENTA "⮃ ⮞"
        elif [ "$volStatus" == "on" ] && [ "$headphone" == "on" ];
                then echo $MAGENTA "⮃ ⮜"
        elif [ "$volStatus" == "off" ] && [ "$headphone" == "on" ];
                then echo $RED "⮃ ⮜"
        elif [ "$volStatus" == "off" ] && [ "$headphone" == "off" ];
                then echo $RED "⮃ ⮝"
	else echo "foo"
        fi
}

panel_volume()
{

        volStatus=$(amixer get Master | tail -n 1 | cut -d '[' -f 4 | sed 's/].*//g')
        volLevel=$(amixer get Master | tail -n 1 | cut -d '[' -f 2 | sed 's/\%].*//g')
        case $volLevel in
		100)    if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $MAGENTA"——————————"
		else echo $(panel_volicon) $RED"——————————"
                        fi
                        ;;
		[0-9]) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $MAGENTA"—"$BG"—————————"
		else echo $(panel_volicon) $RED"—"$BG"—————————"
                        fi
                        ;;
		1*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $MAGENTA"——"$BG"————————"
		else echo $(panel_volicon) $RED"——"$BG"————————"
                        fi
                        ;;
		2*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $MAGENTA"———"$BG"———————"
		else echo $(panel_volicon) $RED"———"$BG"———————"
                        fi
                        ;;
		3*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $MAGENTA"————"$BG"——————"
		else echo $(panel_volicon) $RED"————"$BG"——————"
                        fi
                        ;;
		4*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $MAGENTA"—————"$BG"—————"
		else echo $(panel_volicon) $RED"—————"$BG"—————"
                        fi
                        ;;
		5*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $MAGENTA"——————"$BG"————"
		else echo $(panel_volicon) $RED"——————"$BG"————"
                        fi
                        ;;
		6*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $MAGENTA"———————"$BG"———"
		else echo $(panel_volicon) $RED"———————"$BG"———"
                        fi
                        ;;
		7*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $MAGENTA"————————"$BG"——"
		else echo $(panel_volicon) $RED"————————"$BG"——"
                        fi
                        ;;
		8*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $MAGENTA"——————————"$BG"—"
		else echo $(panel_volicon) $RED"——————————"$BG"—"
                        fi
                        ;;
		9*) if [ "$volStatus" == "on" ]; then echo $(panel_volicon)  $MAGENTA"——————————"
		else echo $(panel_volicon) $RED"——————————"
                        fi
                        ;;
        esac
}

panel_sigStrength()
{
        signalStrength=$(cat /proc/net/wireless | awk 'NR==3 { print $3}' | sed 's/\.//')

        if [ "$signalStrength" -gt 64 ]
        then
                echo "⮃"$ORANGE " ‗▬▪▮"
        elif [ "$signalStrength" -lt 65 ] && [ "$signalStrength" -gt 39 ]
        then
                echo "⮃"$ORANGE " ‗▬▪"$DARKGREY"▮"$ORANGE
        elif [ "$signalStrength" -lt 40 ]
        then
                echo "⮃"$ORANGE " ‗▬"$DARKGREY"▪▮"$ORANGE
        else
                echo "⮃"$DARKGREY " ‗▬▪▮ Not connected"
        fi
}

panel_essid()
{
	echo $YELLOW $(panel_sigStrength) $(essid -w wlp2s0)
}

panel_battery()
{
        batStats=$(acpi --battery | cut -d' ' -f3 | sed 's/,//')
        if [ "$batStats" == "" ]
        then
                echo $LIGHTGREY "⮃ ⮎ AC"
        elif [ "$batStats" == "Charging" ]
        then
                echo $GREEN"⮃ ⮒" $(acpi --battery | cut -d' ' -f4 | sed 's/%,//')"+"
        elif [ "$batStats" == "Discharging" ]
        then
                echo $RED "⮃ ⮑" $(acpi --battery | cut -d' ' -f4 | sed 's/%,//')"-"
        else    echo $YELLOW "⮃ Refreshing..."
        fi
}

panel_clock()
{
	echo $BLUE "⮃ ⭧ " $(clock -f '%a %d %I: %M')
}

# Loop to check time, battery and volume statuses
while true; do
	echo "M" $(panel_emailStatus) $TEAL "⮁" > "$PANEL_FIFO" &
	echo "U" $(panel_updateStatus) $TEAL "⮁" > "$PANEL_FIFO" &
	echo "S" $(panel_battery) $(panel_essid) $(panel_volume) $(panel_clock) > "$PANEL_FIFO" &
	sleep 0.5s
done &

. panel_colors

case "$flavor" in
	bar)
		FONT_FAMILY='-benis-uushi-medium-r-normal--11-90-75-75-p-58-iso10646-1'
		FONT_FAMILY2='-misc-xbmicons-Medium-R-Normal--12-120-72-72-C-60-ISO10646-1'
		cat "$PANEL_FIFO" | panel_bar | bar -p -g 1394x14+22 -f "$FONT_FAMILY2","$FONT_FAMILY" -u 2 -F "$COLOR_BACKGROUND" -B "$COLOR_FOREGROUND" &
		;;
	dzen2)
		FONT_FAMILY='DejaVu Sans'
		FONT_SIZE=11
		cat "$PANEL_FIFO" | panel_dzen2 -f "$FONT_FAMILY" -s "$FONT_SIZE" | dzen2 -h $PANEL_HEIGHT -dock -ta l -title-name panel -fn "${FONT_FAMILY}:pixelsize=${FONT_SIZE}" -fg "$COLOR_FOREGROUND" -bg "$COLOR_BACKGROUND" &
		;;
esac

wait
